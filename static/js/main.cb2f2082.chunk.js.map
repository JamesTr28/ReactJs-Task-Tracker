{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/About.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","_ref","color","text","onClick","_jsxs","className","style","backgroundColor","children","defaultProps","Header","title","onAdd","showAdd","location","useLocation","_jsx","pathname","Footer","Link","to","About","Task","task","onDelete","onToggle","concat","reminder","onDoubleClick","id","FaTimes","cursor","day","Tasks","tasks","map","AddTask","_useState","useState","_useState2","_slicedToArray","setText","_useState3","_useState4","setDay","_useState5","_useState6","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tasksFromServer","wrap","_context","prev","next","fetchTasks","sent","stop","apply","arguments","_ref2","_callee2","res","data","_context2","fetch","json","abrupt","fetchTask","_ref3","_callee3","_context3","_x","addTask","_ref4","_callee4","_context4","method","headers","body","JSON","stringify","_toConsumableArray","_x2","deleteTask","_ref5","_callee5","_context5","filter","_x3","toggleReminder","_ref6","_callee6","taskToToggle","updateTask","_context6","_objectSpread","_x4","Router","Route","path","exact","render","props","_Fragment","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb2f2082.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    \r\n    return (\r\n        <button onClick={onClick } className='btn' style={{ backgroundColor: color}} > {text}\r\n         </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>Task Tracker</h1>\r\n            {location.pathname === '/' &&\r\n                <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick= {onAdd} />\r\n            }   \r\n        </header>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\nexport default Header\r\n","import { Link } from 'react-router-dom'\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p> Copyright &copy; 2021</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from 'react-router-dom'\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to='/'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ( { task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3> { task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} \r\n            onClick={() => onDelete(task.id)} />\r\n             </h3>\r\n            <p>{task.day}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {   \r\n\r\n    return (\r\n        <div>\r\n            {tasks.map((task) => (\r\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState} from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add task!')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label> Task </label>\r\n                <input type='text' placeholder='Add Task'\r\n                value={text} onChange={(e) => setText(e.target.value)}></input>\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label> Day & Time </label>\r\n                <input type='text' placeholder='Add Day & Time'\r\n                value={day} onChange={(e) => setDay(e.target.value)}></input>\r\n            </div>\r\n\r\n            <div className='form-control  forn-control-check'>\r\n                <label> Set Reminder </label>\r\n                <input type='checkbox' checked={reminder}\r\n                value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}></input>\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task'\r\n            className='btn btn-block'></input>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport About from './components/About'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\nimport { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\r\n\r\nfunction App() {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks()\r\n      setTasks(tasksFromServer)\r\n    }\r\n\r\n    getTasks()\r\n  }, [])\r\n\r\n//Fetch Tasks\r\nconst fetchTasks = async () => {\r\n  const res = await fetch('https://my-json-server.typicode.com/JamesTr28/task-tracker-json/tasks')\r\n  const data = await res.json()\r\n  \r\n  return data\r\n}\r\n\r\n//Fetch Task\r\nconst fetchTask = async (id) => {\r\n  const res = await fetch(`https://my-json-server.typicode.com/JamesTr28/task-tracker-json/tasks/${id}`)\r\n  const data = await res.json()\r\n  \r\n  return data\r\n}\r\n\r\n//Add task\r\nconst addTask = async (task) => {\r\n  const res = await fetch('https://my-json-server.typicode.com/JamesTr28/task-tracker-json/tasks', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify(task),\r\n  })\r\n\r\n  const data = await res.json()\r\n\r\n  setTasks([...tasks, data])\r\n\r\n  // const id = Math.floor(Math.random() * 10000) + 1\r\n  // const newTask = { id, ...task }\r\n  // setTasks([...tasks, newTask])\r\n}\r\n\r\n//Delete tasks\r\nconst deleteTask = async (id) => {\r\n  await fetch(`https://my-json-server.typicode.com/JamesTr28/task-tracker-json/tasks/${id}`, {method: 'DELETE',})\r\n  setTasks(tasks.filter((task) => task.id !== id))\r\n}\r\n\r\n//Toggle reminder\r\nconst toggleReminder = async (id) => {\r\n  const taskToToggle =  await fetchTask(id)\r\n  const updateTask = {...taskToToggle, reminder: !taskToToggle.reminder}\r\n  \r\n  const res = await fetch(`https://my-json-server.typicode.com/JamesTr28/task-tracker-json/tasks/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify(updateTask)\r\n  })\r\n\r\n  const data = await res.json()\r\n\r\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder: data.reminder}\r\n   : task))\r\n}\r\n\r\n\r\n  return (\r\n    <Router>\r\n        <div className=\"container\">\r\n          <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\r\n          \r\n          <Route path='/' exact render={ (props) => (\r\n            <>\r\n              {showAddTask && <AddTask onAdd={addTask} />}\r\n              {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask}\r\n              onToggle={toggleReminder} /> )\r\n              : ('No Tasks To Show') }\r\n            </>\r\n          )} />\r\n          <Route path='/about' component={About}/>\r\n          <Footer />\r\n        </div>\r\n    </Router>\r\n  \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}